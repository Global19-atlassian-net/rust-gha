######################################################
#   WARNING! Action needed when changing this file   #
######################################################

# Due to GitHub Actions limitations, we can't use YAML Anchors directly in the
# CI configuration stored on the repository. To work around that this file is
# expanded by a tool in the repository, and the expansion is committed as well.
#
# After you make any change to the file you'll need to run this command:
#
#   ./x.py run src/tools/expand-yaml-anchors
#
# ...and commit the file it updated in addition to this one. If you forget this
# step CI will fail.

---

###############################
#   YAML Anchors Definition   #
###############################

# This key contains most of the YAML anchors that will be used later in the
# document. YAML anchors allows us to greatly reduce duplication inside the CI
# configuration by reusing parts of the configuration.
#
# YAML anchors work by defining an anchor with `&anchor-name` and reusing its
# content in another place with `*anchor-name`. The special `<<` map key merges
# the content of the map with the content of the anchor (or list of anchors).
#
# The expand-yaml-anchors tool will automatically remove this block from the
# output YAML file.
x--expand-yaml-anchors--remove:

  - &shared-ci-variables
    CI_JOB_NAME: ${{ matrix.name }}

  - &public-variables
    SCCACHE_BUCKET: rust-lang-gha-caches
    TOOLSTATE_REPO: https://github.com/pietroalbini/rust-toolstate

  - &prod-variables
    SCCACHE_BUCKET: rust-lang-gha-caches
    DEPLOY_BUCKET: rust-lang-gha
    TOOLSTATE_REPO: https://github.com/pietroalbini/rust-toolstate
    TOOLSTATE_ISSUES_API_URL: https://api.github.com/repos/pietroalbini/rust-toolstate/issues
    TOOLSTATE_PUBLISH: 1
    # AWS_SECRET_ACCESS_KEYs are stored in GitHub's secrets storage, named
    # AWS_SECRET_ACCESS_KEY_<keyid>. Including the key id in the name allows to
    # rotate them in a single branch while keeping the old key in another
    # branch, which wouldn't be possible if the key was named with the kind
    # (caches, artifacts...).
    CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZOMUQATD5
    ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZH5AYXDVF

  - &base-job
    env: {}

  - &job-linux-xl
    os: ubuntu-latest-xl
    <<: *base-job

  - &job-macos-xl
    os: macos-latest  # We don't have an XL builder for this
    <<: *base-job

  - &job-windows-xl
    os: windows-latest-xl
    <<: *base-job

  - &step-run
    shell: bash

  - &base-ci-job
    timeout-minutes: 600
    runs-on: "${{ matrix.os }}"
    env: *shared-ci-variables
    steps:
      - name: configure GitHub Actions to kill the build when outdated
        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master
        with:
          github_token: "${{ secrets.github_token }}"

      - name: disable git crlf conversion
        run: git config --global core.autocrlf false
        <<: *step-run

      - name: checkout the source code
        uses: actions/checkout@v1
        with:
          fetch-depth: 2

###########################
#   Builders definition   #
###########################

name: CI
on:
  push:
    branches:
      - auto
      - try
      - master
  pull_request:
    branches:
      - "**"

jobs:
  auto:
    <<: *base-ci-job
    name: auto
    env:
      <<: [*shared-ci-variables, *prod-variables]
    if: github.event_name == 'push' && github.ref == 'refs/heads/auto'
    strategy:
      # TODO: remove the fail-fast override
      fail-fast: false
      matrix:
        name:
          - i686-msvc-2
        include:
          ######################
          #  Windows Builders  #
          ######################

          - name: i1686-msvc-2
            env:
              RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc
              SCRIPT: make ci-subset-2
              # FIXME(#59637)
              NO_DEBUG_ASSERTIONS: 1
              NO_LLVM_ASSERTIONS: 1
            <<: *job-windows-xl
