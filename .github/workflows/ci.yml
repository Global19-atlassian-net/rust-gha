#############################################################
#   WARNING: automatically generated file, DO NOT CHANGE!   #
#############################################################

# This file was automatically generated by the expand-yaml-anchors tool. The
# source file that generated this one is:
#
#   src/ci/github-actions/ci.yml
#
# Once you make changes to that file you need to run:
#
#   ./x.py run src/tools/expand-yaml-anchors/
#
# The CI build will fail if the tool is not run after changes to this file.

---
name: CI
"on":
  push:
    branches:
      - auto
      - try
      - master
  pull_request:
    branches:
      - "**"
jobs:
  auto:
    name: auto
    env:
      CI_JOB_NAME: "${{ matrix.name }}"
      SCCACHE_BUCKET: rust-lang-gha-caches
      DEPLOY_BUCKET: rust-lang-gha
      TOOLSTATE_REPO: "https://github.com/pietroalbini/rust-toolstate"
      TOOLSTATE_ISSUES_API_URL: "https://api.github.com/repos/pietroalbini/rust-toolstate/issues"
      TOOLSTATE_PUBLISH: 1
      CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZOMUQATD5
      ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZH5AYXDVF
    if: "github.event_name == 'push' && github.ref == 'refs/heads/auto'"
    strategy:
      fail-fast: false
      matrix:
        name:
          - i686-msvc-2
        include:
          - name: i1686-msvc-2
            env:
              RUST_CONFIGURE_ARGS: "--build=i686-pc-windows-msvc"
              SCRIPT: make ci-subset-2
              NO_DEBUG_ASSERTIONS: 1
              NO_LLVM_ASSERTIONS: 1
            os: windows-latest-xl
    timeout-minutes: 600
    runs-on: "${{ matrix.os }}"
    steps:
      - name: configure GitHub Actions to kill the build when outdated
        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master
        with:
          github_token: "${{ secrets.github_token }}"
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: git config --global core.autocrlf false
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: checkout the source code
        uses: actions/checkout@v1
        with:
          fetch-depth: 2
        if: success() && !env.SKIP_JOB
      - name: add extra enviornment variables
        run: src/ci/scripts/setup-environment.sh
        env:
          EXTRA_VARIABLES: "${{ toJson(matrix.env) }}"
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: decide whether to skip this job
        run: src/ci/scripts/should-skip-this.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: collect CPU statistics
        run: src/ci/scripts/collect-cpu-stats.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: show the current environment
        run: src/ci/scripts/dump-environment.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install awscli
        run: src/ci/scripts/install-awscli.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install sccache
        run: src/ci/scripts/install-sccache.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install clang
        run: src/ci/scripts/install-clang.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: switch xcode version
        run: src/ci/scripts/switch-xcode.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install WIX
        run: src/ci/scripts/install-wix.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install InnoSetup
        run: src/ci/scripts/install-innosetup.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: "ensure builds happens inside of C: instead of D:"
        run: src/ci/scripts/windows-symlink-build-dir.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install MSYS2
        run: src/ci/scripts/install-msys2.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install MSYS2 packages
        run: src/ci/scripts/install-msys2-packages.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install MinGW
        run: src/ci/scripts/install-mingw.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: install ninja
        run: src/ci/scripts/install-ninja.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: enable ipv6 on Docker
        run: src/ci/scripts/enable-docker-ipv6.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: disable git crlf conversion
        run: src/ci/scripts/disable-git-crlf-conversion.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: checkout submodules
        run: src/ci/scripts/checkout-submodules.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: ensure line endings are correct
        run: src/ci/scripts/verify-line-endings.sh
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: run the build
        run: src/ci/scripts/run-build-from-ci.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.CACHES_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}"
          TOOLSTATE_REPO_ACCESS_TOKEN: "${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}"
        shell: bash
        if: success() && !env.SKIP_JOB
      - name: upload artifacts to S3
        run: src/ci/scripts/upload-artifacts.sh
        env:
          AWS_ACCESS_KEY_ID: "${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}"
        if: "success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')"
        shell: bash
